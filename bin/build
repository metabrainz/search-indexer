#!/bin/bash

echo "$0 starting"

SEARCH_HOME=/home/search
SEARCH_PUSH_TO="dora roobarb"
SEARCH_PUSH_TO_DELAY=300

SEARCH_REC_HOUR=1
SEARCH_REC_MAX_HOUR=12
SEARCH_REC_THRESHOLD=$((12*3600))

SEARCH_FREEDB_DAY=2
SEARCH_FREEDB_HOUR=4
SEARCH_FREEDB_MAX_HOUR=12
SEARCH_FREEDB_THRESHOLD=86400 # 24 hours

SEARCH_CONFIG="$HOME/mb_search_server.conf"
[ -e "$SEARCH_CONFIG" ] && . "$SEARCH_CONFIG"

echo "SEARCH_HOME=$SEARCH_HOME SEARCH_PUSH_TO=$SEARCH_PUSH_TO"
cd $SEARCH_HOME || exit 1

REC_TIMESTAMP_FILE="$SEARCH_HOME/recording_build_timestamp"

FREEDB_TIMESTAMP_FILE="$SEARCH_HOME/freedb_build_timestamp"

if [ ! -f $FREEDB_TIMESTAMP_FILE ]; then
	date +%s > $FREEDB_TIMESTAMP_FILE
fi
if [ ! -f $REC_TIMESTAMP_FILE ]; then
	date +%s > $REC_TIMESTAMP_FILE
fi

REC_LAST_BUILD=`cat $REC_TIMESTAMP_FILE`
FREEDB_LAST_BUILD=`cat $FREEDB_TIMESTAMP_FILE`
NOW=`date +%s`
DAY=`date +%d`
HOUR=`date +%H`
REC_ELAPSED=`expr $NOW - $REC_LAST_BUILD`
FREEDB_ELAPSED=`expr $NOW - $FREEDB_LAST_BUILD`

# if cur isn't a symlink, we run once to prepare the dirs and links
[ ! -L data/cur ] && (cd data && $SEARCH_HOME/bin/safe_dir_rotation)

echo "Clean up old files"
! rm -rf data/new/*

run_and_show_errors() {
	echo "Running $@"
	if ! "$@"
	then
		RC=$?
		echo "FAIL '$@' (rc=$RC)"
		return 1
	else
		echo "PASS '$@'"
		return 0
	fi
}


if [ "$FREEDB_ELAPSED" -ge "$SEARCH_FREEDB_THRESHOLD" ] && 
   [ "$DAY" -eq "$SEARCH_FREEDB_DAY" ] &&
   [ "$HOUR" -ge "$SEARCH_FREEDB_HOUR" ] &&
   [ "$HOUR" -le "$SEARCH_FREEDB_MAX_HOUR" ]; then
	echo "Building freedb index. Last index was started $FREEDB_ELAPSED seconds ago"
	START=$(date +%s)
	run_and_show_errors make freedb || exit 2
	echo "$START" > $FREEDB_TIMESTAMP_FILE
else
	echo "Not building freedb index. ($FREEDB_ELAPSED of $SEARCH_FREEDB_THRESHOLD seconds since last freedb build)"
fi

if [ "$REC_ELAPSED" -ge "$SEARCH_REC_THRESHOLD" ] && [ "$HOUR" -ge "$SEARCH_REC_HOUR" ] && [ "$HOUR" -le "$SEARCH_REC_MAX_HOUR" ]; then
	echo "Building recording index. Last index was started $REC_ELAPSED seconds ago"
	START=$(date +%s)
	run_and_show_errors make recording || exit 2
	echo "$START" > $REC_TIMESTAMP_FILE
else
	echo "Not building recording index. ($REC_ELAPSED of $SEARCH_REC_THRESHOLD seconds since last recording build)"
fi

run_and_show_errors make || exit 2

echo "Rotate generated indexes"
(cd data && safe_dir_rotation) || exit 1


if [ ! -z "$SEARCH_PUSH_TO" ]; then
	for h in $SEARCH_PUSH_TO
	do
		SERVER="$h.localdomain"
		run_and_show_errors push-to-server $SERVER sync
		if [ $? = 0 ]; then
			run_and_show_errors push-to-server $SERVER rotate
			if [ $? = 0 ]; then
				run_and_show_errors push-to-server $SERVER restart \
				&& sleep $SEARCH_PUSH_TO_DELAY
			fi
		fi
	done
fi

echo "$0 completed"

# eof
